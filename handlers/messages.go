package handlers

import (
	"context"
	"strings"
	"time"

	"gopkg.in/telebot.v4"
)

func (h *TelegramHandler) messageRules() string {
	return "<b>‚ùó –ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ | –î–∏–∫—Å–ª–µ–π–º–µ—Ä</b>\n\n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–µ–≥–∞–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π. –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∏ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º –≤ —Å—Ç–æ—Ä–æ–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ (@wnderbin) –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –Ω–µ–ø—Ä–∞–≤–æ–º–µ—Ä–Ω—ã–µ –∏ –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\n<b>–í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –¥–∏–∫–ª–µ–π–º–µ—Ä–æ–º, –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞.</b>\n\n<a href=\"https://github.com/wnderbin/QuokkaAI-Bot/tree/main/rules\">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>"
}

func (h *TelegramHandler) messagePolicy() string {
	return "<b>üìÑ –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</b>\n\n–ó–∞—è–≤–ª–µ–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º —É–∫–∞–∑–∞–Ω–æ, –∫–∞–∫ –±–æ—Ç —Å–æ–±–∏—Ä–∞–µ—Ç –æ –≤–∞—Å –¥–∞–Ω–Ω—ã–µ, –∫–∞–∫ –¥–æ–ª–≥–æ –∏ –≤ –∫–∞–∫–æ–º –≤–∏–¥–µ –æ–Ω –∏—Ö —Ö—Ä–∞–Ω–∏—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç.\n\n‚ùó<b>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–æ—Ç–∞!</b>\n\n<a href=\"https://github.com/wnderbin/QuokkaAI-Bot/tree/main/privacy\">–°—Å—ã–ª–∫–∞</a>"
}

func (h *TelegramHandler) messageAbout() string {
	return "üöÄ <b>Quokka-Bot - –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π DeepSeekAPI.</b>\n\n<b>–í —ç—Ç–æ–º –±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≥–∏–±–∫–∞—è –º–æ–¥–µ–ª—å DeepSeek V3 0324.</b>\n\n<b>–ö–ª—é—á–µ–≤—ã–µ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏:</b>\n<b>1.</b> –ì–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.\n<b>2.</b> –õ—É—á—à–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–æ–≤.\n<b>3.</b> API —Å –Ω–∏–∑–∫–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –º–æ–¥–µ–ª—å '–¥—É–º–∞–µ—Ç' –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã –±—ã—Å—Ç—Ä–µ–µ.\n<b>4.</b> –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π \"hallucination\". (–º–µ–Ω—å—à–µ –≤—ã–¥—É–º–∞–Ω–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤)\n\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @wnderbin"
}

func (h *TelegramHandler) messageHelp() string {
	return "<b>‚ùì –ü–æ–º–æ—â—å:</b>\n<a href=\"https://github.com/wnderbin/QuokkaAI-Bot/tree/main/docs\">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</a> - –∏–º–µ—é—Ç—Å—è —Ä—É—Å—Å–∫–∞—è –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∞—è –≤–µ—Ä—Å–∏–∏. –í –Ω–µ–π –∏–∑–ª–æ–∂–µ–Ω–∞ –≤—Å—è —Ä–∞–±–æ—Ç–∞ —Å –±–æ—Ç–æ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –≤–µ—Ä–æ—è—Ç–Ω–æ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã —Å–µ—Ä–≤–µ—Ä–∞. \n\n‚ùó –ù–æ –µ—Å–ª–∏ –≤—ã —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç–µ—Å—å —Å –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ –æ—à–∏–±–∫–æ–π –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –ø–æ–¥—Ä—è–¥, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Å –ø—Ä–æ–±–ª–µ–º–æ–π –º–Ω–µ –≤ –ª–∏—á–∫—É - @wnderbin"
}

func (h *TelegramHandler) messageReset(user *telebot.User) string {
	ctx, cancel := context.WithTimeout(context.Background(), 60*time.Second)
	defer cancel()

	if err := h.Neural.ResetConversation(ctx, user.ID); err != nil {
		h.Logger.Printf("[ ERROR ] Reset error for user %d %s: %v", user.ID, user.Username, err)
		return "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞"
	}
	return "‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞"
}

func (h *TelegramHandler) messageStart() string {
	return "<b>üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!</b> –Ø –±–æ—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π DeepSeek AI (DeepSeek V3 0324)\n\n–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è –∑–∞–ø—Ä–æ—Å, –∞ —è –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—á—É –ø—Ä–∏ –ø–æ–º–æ—â–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ :)\n\n‚ùó–ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏\n\n<b>–ö–æ–º–∞–Ω–¥—ã:</b>\n/rules - –î–∏—Å–∫–ª–µ–π–º–µ—Ä, –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –∫ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—é. –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∏–º –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞.\n/policy - –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –∫ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—é. –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–µ–π –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞.\n/reset - –°–±—Ä–æ—Å–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞\n/help - –ü–æ–º–æ—â—å\n/about - –û –±–æ—Ç–µ"
}

func (h *TelegramHandler) processMessage(c telebot.Context) error {
	// Text message processing logic
	startTime := time.Now()
	user := c.Sender()
	text := c.Text()

	h.Logger.Printf("Message from %d %s: %.100s...", user.ID, user.Username, text)

	ctx, cancel := context.WithTimeout(context.Background(), 3*time.Minute)
	defer cancel()

	if err := c.Notify(telebot.Typing); err != nil {
		h.Logger.Printf("[ ERROR ] Failed to send typing action %d %s: %v", user.ID, user.Username, err)
	}

	response, err := h.Neural.HandleMessage(ctx, user.ID, text) // Neural network response to user
	if err != nil {
		h.Logger.Printf("[ ERROR ] Error from Neural for user %d: %v", user.ID, err)
		return c.Send("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
	}

	if response == "" { // Due to internal errors or other conditions, the neural network may send an empty response to the user
		h.Logger.Printf("[ ERROR ] Empty response from Neural for user %d", user.ID)
		return c.Send("ü§∑ –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç. –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–µ—Ä–∞ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã. –ú–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–Ω–∞—á–µ.")
	}

	cleanText := strings.TrimSpace(response) // The maximum character limit for messages in Telegram is 4000. Cut off the neural network's response if it is too long.
	if len(cleanText) > 4000 {
		cleanText = cleanText[:4000]
	}

	if err := safeSend(c, cleanText); err != nil { // Secure messaging feature
		h.Logger.Printf("[ ERROR ] Failed to send message to %d: %v", user.ID, err)
		return c.Send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
	}

	h.Logger.Printf("Successfully responded to %d in %v", user.ID, time.Since(startTime))
	return nil
}
